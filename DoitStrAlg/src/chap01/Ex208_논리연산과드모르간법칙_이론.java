package chap01;

public class Ex208_논리연산과드모르간법칙_이론 {

	public static void main(String[] args) {
		// cf. 이론 정리 때문에 깃허브 블로그 팔까 고민되네?
		// 벨로그에 올리기엔 연동이 낮은 느낌 + 띄엄띄엄 올리기 애매.. 흠

		// 43p
		// 논리곱 &&
		// x   y    x&&y  
		// 참  참     참
		// 참  거짓   거짓
		// 거짓 참    거짓
		// 거짓 거짓   거짓

		// 논리합 ||
		// x   y    x||y  
		// 참  참     참
		// 참  거짓   참
		// 거짓 참    참
		// 거짓 거짓  거짓
		
		// 단축 평가 short circuit evaluation
		// A || B
		// 왼쪽 피연산자 A가 true면 오른쪽 피연산자인 B는 평가하지 않아
		// A && B
		// 왼쪽 피연산자 A가 false면 오른쪽 피연산자인 B는 평가하지 않아
		
		// 드모르간 법칙
		// 각 조건을 부정하고 논리곱을 논리합으로, 논리합을 논리곱으로 바꾸고 다시 전체를 부정하면,
		// 원래의 조건과 같다.
		int n=100;
		String a1 = (n<10 || n>99) ? "n은 2자리 아님" : "n은 2자리" ;
		String a2 = !(n>=10 && n<=99) ? "n은 2자리 아님" : "n은 2자리";
		System.out.println(a1);
		System.out.println(a2);
		
		// Ex207에서 while(n<10 || n>99)에서 n<10 || n>99는 반복을 계속하게 하는 '계속 조건'
		//			while(!(n>=10 && n<=99))에서 n>=10 && n<=99는 반복을 종료하는 '종료 조건'

	// 45p
		// 구조적 프로그래밍 structured programming
		// 입력하는 곳 하나, 출력하는 곳 하나를 갖는 구성 요소만을 사용하여
		// 이들을 계층적으로 패치하여 프로그램을 구성하는 방식
		// 순차, 선택, 반복이라는 세 종류의 제어 흐름 사용
	// 47p
		// 카운터용 변수의 이름은 왜 i나 j일까?
		// 에전에 과학 계산용 프로그래밍 언어인 포트란(FORTRAN)에서 변수는 기본적으로 실수형
		// 				이름의 첫 문자가 I,J, ..., N인 변수는 자동으로 정수형으로 간주했음
		// 그래서 반복을 제어하는 변수로 I, J, ... 를 사용하는 것이 가장 쉽고 편리한 방법이었음

	}

}
